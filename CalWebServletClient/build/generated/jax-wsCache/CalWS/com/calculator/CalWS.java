
package com.calculator;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CalWS", targetNamespace = "http://calculator.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CalWS {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://calculator.com/", className = "com.calculator.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://calculator.com/", className = "com.calculator.HelloResponse")
    @Action(input = "http://calculator.com/CalWS/helloRequest", output = "http://calculator.com/CalWS/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "multiplication", targetNamespace = "http://calculator.com/", className = "com.calculator.Multiplication")
    @ResponseWrapper(localName = "multiplicationResponse", targetNamespace = "http://calculator.com/", className = "com.calculator.MultiplicationResponse")
    @Action(input = "http://calculator.com/CalWS/multiplicationRequest", output = "http://calculator.com/CalWS/multiplicationResponse")
    public float multiplication(
        @WebParam(name = "num1", targetNamespace = "")
        float num1,
        @WebParam(name = "num2", targetNamespace = "")
        float num2);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divition", targetNamespace = "http://calculator.com/", className = "com.calculator.Divition")
    @ResponseWrapper(localName = "divitionResponse", targetNamespace = "http://calculator.com/", className = "com.calculator.DivitionResponse")
    @Action(input = "http://calculator.com/CalWS/divitionRequest", output = "http://calculator.com/CalWS/divitionResponse")
    public float divition(
        @WebParam(name = "num1", targetNamespace = "")
        float num1,
        @WebParam(name = "num2", targetNamespace = "")
        float num2);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addition", targetNamespace = "http://calculator.com/", className = "com.calculator.Addition")
    @ResponseWrapper(localName = "additionResponse", targetNamespace = "http://calculator.com/", className = "com.calculator.AdditionResponse")
    @Action(input = "http://calculator.com/CalWS/additionRequest", output = "http://calculator.com/CalWS/additionResponse")
    public float addition(
        @WebParam(name = "num1", targetNamespace = "")
        float num1,
        @WebParam(name = "num2", targetNamespace = "")
        float num2);

    /**
     * 
     * @param num1
     * @param num2
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "substraction", targetNamespace = "http://calculator.com/", className = "com.calculator.Substraction")
    @ResponseWrapper(localName = "substractionResponse", targetNamespace = "http://calculator.com/", className = "com.calculator.SubstractionResponse")
    @Action(input = "http://calculator.com/CalWS/substractionRequest", output = "http://calculator.com/CalWS/substractionResponse")
    public float substraction(
        @WebParam(name = "num1", targetNamespace = "")
        float num1,
        @WebParam(name = "num2", targetNamespace = "")
        float num2);

}
